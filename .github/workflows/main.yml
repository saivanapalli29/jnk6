name: Docker Image CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/ninesoftech

      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ninesoftech
        
      - name: Set up SSH key and whitelist EC2 IP address 🐻‍❄️
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Step 5: SSH into EC2 instance, pull latestS code, and deploy Docker container
      - name: SSH into EC2 and deploy Docker container 🚀
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
            sudo apt update -y || true
            sudo git pull origin master
            sudo apt install docker.io* -y || true
            sudo docker stop my-nodejs-app || true
            sudo docker rm my-nodejs-app || true
            sudo docker run -d --name my-nodejs-app -p 80:80 saivanapalli29/ninesoftech
          "

      # Step 6: Clean up SSH key
      - name: Clean up SSH key 🚀
        if: always()
        run: rm -f ~/.ssh/id_rsa
     
